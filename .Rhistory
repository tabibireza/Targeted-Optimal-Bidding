setwd("E:/towork/study/r-studio/projects/pricing2")
---
title: "Targeted Optimal Bidding"
output:
html_notebook: default
pdf_document: default
---
In this notebook we see how we can model bidding data from a B2B retailer to a) figure out what determines the probability of the customer accepting a bid and b) determine the optimal price to quote for a given customer for a given bid. We will use logistic regression followed by optimization for this task.
bd <- read.csv(file.path(wd,"RawShort1.csv"))
wd<-getwd()
bd <- read.csv(file.path(wd,"RawShort1.csv"))
View(bd)
summary(bd)
res1 <- glm(Order ~ Time+Quantity+PricePerLb, data=bd, family=binomial(link = "logit"))
summary(res1)
df1<-bd[1:3,]
df1
predict.glm(res1, newdata=df1, type="response")
pf1<-function(x, hold_obs, result)
{
df_hold <- hold_obs
df_hold$PricePerLb <-x
prob <- predict.glm(result, newdata=df_hold, type="response")
profit <- (x-df_hold$CostPerLb)*prob*df_hold$Quantity
profit
}
View(pf1)
pf1(2, df1[1,], res1)
pf1(2, df1[10,], res1)
pf1(2, df1[10,], res1)
pf1(2, df1[1,], res1)
pf1(2, df1[1,], res1)
pf1(1, df1[1,], res1)
pf1(1.5, df1[1,], res1)
pf1(2, df1[1,], res1)
opt1<-optim(4.0, pf1, method="BFGS", control=list(fnscale=-1), hold_obs=df1[1,], result=res1)
c(opt1$par, opt1$value)
gain <- (bd$LagPrice - bd$PricePerLb)*(bd$LagPrice > bd$PricePerLb)
loss <- (bd$PricePerLb - bd$LagPrice)*(bd$PricePerLb > bd$LagPrice)
bd$gain <- gain
bd$loss <- loss
res2 <- glm(Order ~ Time+Quantity+gain+loss+Quantity:gain+Quantity:loss, data=bd, family=binomial(link = "logit"))
summary(res2)
df2<-bd[1:2,]
df2
View(df2)
predict.glm(res2, newdata=df2, type="response")
pf2<-function(x, hold_obs, result)
{
df1<-hold_obs
df1$gain <- (df1$LagPrice - x)*(df1$LagPrice > x)
df1$loss <- (x - df1$LagPrice)* (x > df1$LagPrice)
prob <- predict.glm(result, newdata=df1, type="response")
profit <- (x-df1$CostPerLb)*prob*df1$Quantity
profit
}
pf2(2.5, df2[1,], res2)
opt2<-optim(4.0, pf2, method="BFGS", control=list(fnscale=-1), hold_obs=df2[1,], result=res2)
c(opt2$par, opt2$value)
